name: Release Binaries

on:
  push:
    tags:
      - 'v*'

jobs:
  build-release:
    name: Build Release Binaries
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            artifact_name: qitops
            asset_name: qitops-linux-amd64
          - os: ubuntu-latest
            target: x86_64-unknown-linux-musl
            artifact_name: qitops
            asset_name: qitops-linux-musl-amd64
          - os: macos-latest
            target: x86_64-apple-darwin
            artifact_name: qitops
            asset_name: qitops-macos-amd64
          - os: macos-latest
            target: aarch64-apple-darwin
            artifact_name: qitops
            asset_name: qitops-macos-arm64
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            artifact_name: qitops.exe
            asset_name: qitops-windows-amd64.exe

    steps:
      - uses: actions/checkout@v3
      
      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
          target: ${{ matrix.target }}
      
      - name: Install musl-tools (Linux MUSL)
        if: matrix.target == 'x86_64-unknown-linux-musl'
        run: |
          sudo apt-get update
          sudo apt-get install -y musl-tools
      
      - name: Build
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release --target ${{ matrix.target }}
          
      - name: Prepare asset
        shell: bash
        run: |
          mkdir -p release
          if [ "${{ matrix.os }}" = "windows-latest" ]; then
            cp target/${{ matrix.target }}/release/${{ matrix.artifact_name }} release/${{ matrix.asset_name }}
          else
            cp target/${{ matrix.target }}/release/${{ matrix.artifact_name }} release/${{ matrix.asset_name }}
            chmod +x release/${{ matrix.asset_name }}
          fi
      
      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.asset_name }}
          path: release/${{ matrix.asset_name }}
          
  create-release:
    name: Create GitHub Release
    needs: build-release
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Download all artifacts
        uses: actions/download-artifact@v3
        with:
          path: release
      
      - name: Display structure of downloaded files
        run: ls -R release
      
      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          files: release/**/*
          draft: false
          prerelease: false
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
